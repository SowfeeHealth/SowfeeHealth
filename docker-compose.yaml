services:
  db:
    image: mysql:8
    container_name: my-mysql-container
    restart: always
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    image: ${DOCKER_USERNAME:-local}/django-app:latest
    container_name: django-app
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: .env
    environment:
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - IS_DOCKER_DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./frontend:/frontend
    command: bash -c "python manage.py makemigrations surveys && python manage.py migrate && python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"

  celery:
    build: .
    command: celery -A core worker -l info
    volumes:
      - ./backend:/app
    env_file: .env
    depends_on:
      - redis
      - db
    working_dir: /app  # Add this line

volumes:
  mysql_data:
  redis_data:

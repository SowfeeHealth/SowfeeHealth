services:
  db:
    image: mysql:8
    container_name: my-mysql-container
    restart: always
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    # 限制资源使用
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  web:
    image: ${DOCKER_USERNAME}/django-app:latest
    container_name: django-app
    restart: on-failure:5
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - DJANGO_SETTINGS_MODULE=core.settings
      - DEBUG=0
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}  # Add this line
    ports:
      - "8000:8000"
      - "8001:8001"
    working_dir: /app/backend  # Add this line
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # 注释或删除下面的 command 部分，使用 Dockerfile 中的 CMD
    command: >
        bash -c "python manage.py migrate && 
                 python manage.py collectstatic --noinput &&
                 python manage.py shell -c \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(email='${ADMIN_EMAIL}').exists() or User.objects.create_superuser(email='${ADMIN_EMAIL}', password='${ADMIN_PASSWORD}')\" && 
                 gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/app/backend/staticfiles

  nginx:
    image: nginx:1.24
    container_name: nginx
    restart: on-failure:5
    ports:
      - "8080:80"
    volumes:
      - static_volume:/usr/share/nginx/html
      - /home/ec2-user/app/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web

volumes:
  mysql_data:
  static_volume:
